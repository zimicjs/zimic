// Auto-generated by zimic.
// NOTE: Do not manually edit this file. Changes will be overridden.

import type { HttpSchema } from 'zimic/http';

export type GitHubSchema = HttpSchema<{
  '/repos/:owner/:repo': {
    GET: GitHubOperations['repos/get'];
  };
}>;

export interface GitHubComponents {
  schemas: {
    'simple-user': {
      name?: string | null;
      email?: string | null;
      login: string;
      id: number;
      node_id: string;
      avatar_url: string;
      gravatar_id: string | null;
      url: string;
      html_url: string;
      followers_url: string;
      following_url: string;
      gists_url: string;
      starred_url: string;
      subscriptions_url: string;
      organizations_url: string;
      repos_url: string;
      events_url: string;
      received_events_url: string;
      type: string;
      site_admin: boolean;
      starred_at?: string;
      user_view_type?: string;
    };
    'basic-error': {
      message?: string;
      documentation_url?: string;
      url?: string;
      status?: string;
    };
    'nullable-simple-user': {
      name?: string | null;
      email?: string | null;
      login: string;
      id: number;
      node_id: string;
      avatar_url: string;
      gravatar_id: string | null;
      url: string;
      html_url: string;
      followers_url: string;
      following_url: string;
      gists_url: string;
      starred_url: string;
      subscriptions_url: string;
      organizations_url: string;
      repos_url: string;
      events_url: string;
      received_events_url: string;
      type: string;
      site_admin: boolean;
      starred_at?: string;
      user_view_type?: string;
    } | null;
    'nullable-license-simple': {
      key: string;
      name: string;
      url: string | null;
      spdx_id: string | null;
      node_id: string;
      html_url?: string;
    } | null;
    repository: {
      id: number;
      node_id: string;
      name: string;
      full_name: string;
      license: GitHubComponents['schemas']['nullable-license-simple'];
      forks: number;
      permissions?: {
        admin: boolean;
        pull: boolean;
        triage?: boolean;
        push: boolean;
        maintain?: boolean;
      };
      owner: GitHubComponents['schemas']['simple-user'];
      private: boolean;
      html_url: string;
      description: string | null;
      fork: boolean;
      url: string;
      archive_url: string;
      assignees_url: string;
      blobs_url: string;
      branches_url: string;
      collaborators_url: string;
      comments_url: string;
      commits_url: string;
      compare_url: string;
      contents_url: string;
      contributors_url: string;
      deployments_url: string;
      downloads_url: string;
      events_url: string;
      forks_url: string;
      git_commits_url: string;
      git_refs_url: string;
      git_tags_url: string;
      git_url: string;
      issue_comment_url: string;
      issue_events_url: string;
      issues_url: string;
      keys_url: string;
      labels_url: string;
      languages_url: string;
      merges_url: string;
      milestones_url: string;
      notifications_url: string;
      pulls_url: string;
      releases_url: string;
      ssh_url: string;
      stargazers_url: string;
      statuses_url: string;
      subscribers_url: string;
      subscription_url: string;
      tags_url: string;
      teams_url: string;
      trees_url: string;
      clone_url: string;
      mirror_url: string | null;
      hooks_url: string;
      svn_url: string;
      homepage: string | null;
      language: string | null;
      forks_count: number;
      stargazers_count: number;
      watchers_count: number;
      size: number;
      default_branch: string;
      open_issues_count: number;
      is_template: boolean;
      topics?: string[];
      has_issues: boolean;
      has_projects: boolean;
      has_wiki: boolean;
      has_pages: boolean;
      has_downloads: boolean;
      has_discussions: boolean;
      archived: boolean;
      disabled: boolean;
      visibility: string;
      pushed_at: string | null;
      created_at: string | null;
      updated_at: string | null;
      allow_rebase_merge: boolean;
      temp_clone_token?: string;
      allow_squash_merge: boolean;
      allow_auto_merge: boolean;
      delete_branch_on_merge: boolean;
      allow_update_branch: boolean;
      use_squash_pr_title_as_default: boolean;
      squash_merge_commit_title?: 'PR_TITLE' | 'COMMIT_OR_PR_TITLE';
      squash_merge_commit_message?: 'PR_BODY' | 'COMMIT_MESSAGES' | 'BLANK';
      merge_commit_title?: 'PR_TITLE' | 'MERGE_MESSAGE';
      merge_commit_message?: 'PR_BODY' | 'PR_TITLE' | 'BLANK';
      allow_merge_commit: boolean;
      allow_forking?: boolean;
      web_commit_signoff_required: boolean;
      open_issues: number;
      watchers: number;
      master_branch?: string;
      starred_at?: string;
      anonymous_access_enabled?: boolean;
    };
    'security-and-analysis': {
      advanced_security?: {
        status?: 'enabled' | 'disabled';
      };
      dependabot_security_updates?: {
        status?: 'enabled' | 'disabled';
      };
      secret_scanning?: {
        status?: 'enabled' | 'disabled';
      };
      secret_scanning_push_protection?: {
        status?: 'enabled' | 'disabled';
      };
      secret_scanning_non_provider_patterns?: {
        status?: 'enabled' | 'disabled';
      };
      secret_scanning_ai_detection?: {
        status?: 'enabled' | 'disabled';
      };
    } | null;
    'nullable-repository': {
      id: number;
      node_id: string;
      name: string;
      full_name: string;
      license: GitHubComponents['schemas']['nullable-license-simple'];
      forks: number;
      permissions?: {
        admin: boolean;
        pull: boolean;
        triage?: boolean;
        push: boolean;
        maintain?: boolean;
      };
      owner: GitHubComponents['schemas']['simple-user'];
      private: boolean;
      html_url: string;
      description: string | null;
      fork: boolean;
      url: string;
      archive_url: string;
      assignees_url: string;
      blobs_url: string;
      branches_url: string;
      collaborators_url: string;
      comments_url: string;
      commits_url: string;
      compare_url: string;
      contents_url: string;
      contributors_url: string;
      deployments_url: string;
      downloads_url: string;
      events_url: string;
      forks_url: string;
      git_commits_url: string;
      git_refs_url: string;
      git_tags_url: string;
      git_url: string;
      issue_comment_url: string;
      issue_events_url: string;
      issues_url: string;
      keys_url: string;
      labels_url: string;
      languages_url: string;
      merges_url: string;
      milestones_url: string;
      notifications_url: string;
      pulls_url: string;
      releases_url: string;
      ssh_url: string;
      stargazers_url: string;
      statuses_url: string;
      subscribers_url: string;
      subscription_url: string;
      tags_url: string;
      teams_url: string;
      trees_url: string;
      clone_url: string;
      mirror_url: string | null;
      hooks_url: string;
      svn_url: string;
      homepage: string | null;
      language: string | null;
      forks_count: number;
      stargazers_count: number;
      watchers_count: number;
      size: number;
      default_branch: string;
      open_issues_count: number;
      is_template: boolean;
      topics?: string[];
      has_issues: boolean;
      has_projects: boolean;
      has_wiki: boolean;
      has_pages: boolean;
      has_downloads: boolean;
      has_discussions: boolean;
      archived: boolean;
      disabled: boolean;
      visibility: string;
      pushed_at: string | null;
      created_at: string | null;
      updated_at: string | null;
      allow_rebase_merge: boolean;
      temp_clone_token?: string;
      allow_squash_merge: boolean;
      allow_auto_merge: boolean;
      delete_branch_on_merge: boolean;
      allow_update_branch: boolean;
      use_squash_pr_title_as_default: boolean;
      squash_merge_commit_title?: 'PR_TITLE' | 'COMMIT_OR_PR_TITLE';
      squash_merge_commit_message?: 'PR_BODY' | 'COMMIT_MESSAGES' | 'BLANK';
      merge_commit_title?: 'PR_TITLE' | 'MERGE_MESSAGE';
      merge_commit_message?: 'PR_BODY' | 'PR_TITLE' | 'BLANK';
      allow_merge_commit: boolean;
      allow_forking?: boolean;
      web_commit_signoff_required: boolean;
      open_issues: number;
      watchers: number;
      master_branch?: string;
      starred_at?: string;
      anonymous_access_enabled?: boolean;
    } | null;
    'code-of-conduct-simple': {
      url: string;
      key: string;
      name: string;
      html_url: string | null;
    };
    'full-repository': {
      id: number;
      node_id: string;
      name: string;
      full_name: string;
      owner: GitHubComponents['schemas']['simple-user'];
      private: boolean;
      html_url: string;
      description: string | null;
      fork: boolean;
      url: string;
      archive_url: string;
      assignees_url: string;
      blobs_url: string;
      branches_url: string;
      collaborators_url: string;
      comments_url: string;
      commits_url: string;
      compare_url: string;
      contents_url: string;
      contributors_url: string;
      deployments_url: string;
      downloads_url: string;
      events_url: string;
      forks_url: string;
      git_commits_url: string;
      git_refs_url: string;
      git_tags_url: string;
      git_url: string;
      issue_comment_url: string;
      issue_events_url: string;
      issues_url: string;
      keys_url: string;
      labels_url: string;
      languages_url: string;
      merges_url: string;
      milestones_url: string;
      notifications_url: string;
      pulls_url: string;
      releases_url: string;
      ssh_url: string;
      stargazers_url: string;
      statuses_url: string;
      subscribers_url: string;
      subscription_url: string;
      tags_url: string;
      teams_url: string;
      trees_url: string;
      clone_url: string;
      mirror_url: string | null;
      hooks_url: string;
      svn_url: string;
      homepage: string | null;
      language: string | null;
      forks_count: number;
      stargazers_count: number;
      watchers_count: number;
      size: number;
      default_branch: string;
      open_issues_count: number;
      is_template?: boolean;
      topics?: string[];
      has_issues: boolean;
      has_projects: boolean;
      has_wiki: boolean;
      has_pages: boolean;
      has_downloads?: boolean;
      has_discussions: boolean;
      archived: boolean;
      disabled: boolean;
      visibility?: string;
      pushed_at: string;
      created_at: string;
      updated_at: string;
      permissions?: {
        admin: boolean;
        maintain?: boolean;
        push: boolean;
        triage?: boolean;
        pull: boolean;
      };
      allow_rebase_merge?: boolean;
      template_repository?: GitHubComponents['schemas']['nullable-repository'];
      temp_clone_token?: string | null;
      allow_squash_merge?: boolean;
      allow_auto_merge?: boolean;
      delete_branch_on_merge?: boolean;
      allow_merge_commit?: boolean;
      allow_update_branch?: boolean;
      use_squash_pr_title_as_default?: boolean;
      squash_merge_commit_title?: 'PR_TITLE' | 'COMMIT_OR_PR_TITLE';
      squash_merge_commit_message?: 'PR_BODY' | 'COMMIT_MESSAGES' | 'BLANK';
      merge_commit_title?: 'PR_TITLE' | 'MERGE_MESSAGE';
      merge_commit_message?: 'PR_BODY' | 'PR_TITLE' | 'BLANK';
      allow_forking?: boolean;
      web_commit_signoff_required?: boolean;
      subscribers_count: number;
      network_count: number;
      license: GitHubComponents['schemas']['nullable-license-simple'];
      organization?: GitHubComponents['schemas']['nullable-simple-user'];
      parent?: GitHubComponents['schemas']['repository'];
      source?: GitHubComponents['schemas']['repository'];
      forks: number;
      master_branch?: string;
      open_issues: number;
      watchers: number;
      anonymous_access_enabled: boolean;
      code_of_conduct?: GitHubComponents['schemas']['code-of-conduct-simple'];
      security_and_analysis?: GitHubComponents['schemas']['security-and-analysis'];
      custom_properties?: {
        [key: string]: any;
      };
    };
  };
  responses: {
    not_found: HttpSchema.Response<{
      body: GitHubComponents['schemas']['basic-error'];
    }>;
    forbidden: HttpSchema.Response<{
      body: GitHubComponents['schemas']['basic-error'];
    }>;
    moved_permanently: HttpSchema.Response<{
      body: GitHubComponents['schemas']['basic-error'];
    }>;
  };
}

export interface GitHubOperations {
  'repos/get': HttpSchema.Method<{
    response: {
      200: {
        body: GitHubComponents['schemas']['full-repository'];
      };
      301: GitHubComponents['responses']['moved_permanently'];
      403: GitHubComponents['responses']['forbidden'];
      404: GitHubComponents['responses']['not_found'];
    };
  }>;
}
