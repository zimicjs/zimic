import reactPlugin from 'eslint-plugin-react';
import reactHooksPlugin from 'eslint-plugin-react-hooks';
import jsxAccessibilityYPlugin from 'eslint-plugin-jsx-a11y';
import importPlugin from 'eslint-plugin-import';
import { fixupPluginRules } from '@eslint/compat';
import defaultConfig from '@zimic/eslint-config';

export default [
  ...defaultConfig,
  {
    plugins: {
      react: reactPlugin,
      'react-hooks': fixupPluginRules(reactHooksPlugin),
      'jsx-a11y': jsxAccessibilityYPlugin,
      import: fixupPluginRules(importPlugin),
    },

    settings: {
      react: { version: 'detect' },
    },

    rules: {
      'react/display-name': 'error',
      'react/no-unescaped-entities': 'off',
      'react/self-closing-comp': 'warn',
      'react/function-component-definition': [
        'error',
        { namedComponents: ['function-declaration'], unnamedComponents: ['function-expression'] },
      ],
      'react/button-has-type': 'warn',
      'react/destructuring-assignment': ['warn', 'always'],
      'react/hook-use-state': 'warn',
      'react/no-children-prop': 'warn',
      'react/no-danger': 'error',
      'react/no-danger-with-children': 'error',
      'react/no-deprecated': 'error',
      'react/no-invalid-html-attribute': 'error',
      'react/no-namespace': 'warn',
      'react/no-unstable-nested-components': ['error', { allowAsProps: true }],
      'react/void-dom-elements-no-children': 'error',
      'react/jsx-boolean-value': 'warn',
      'react/jsx-fragments': ['warn', 'syntax'],
      'react/jsx-key': ['error', { checkFragmentShorthand: true }],
      'react/jsx-no-comment-textnodes': 'error',
      'react/jsx-no-constructed-context-values': 'error',
      'react/jsx-no-duplicate-props': 'error',
      'react/jsx-no-script-url': 'error',
      'react/jsx-no-target-blank': 'warn',
      'react/jsx-no-undef': 'error',
      'react/jsx-no-useless-fragment': ['warn', { allowExpressions: true }],
      'react/jsx-pascal-case': 'warn',
      'react/no-unknown-property': ['error', { ignore: ['jsx', 'global'] }],
      'react/react-in-jsx-scope': 'off',
      'react/prop-types': 'off',
      'react/forward-ref-uses-ref': 'warn',
      'react/jsx-curly-brace-presence': ['warn', { props: 'never', children: 'never', propElementValues: 'always' }],
      'react/no-array-index-key': 'warn',
      'react-hooks/rules-of-hooks': 'error',
      'react-hooks/exhaustive-deps': 'warn',

      'jsx-a11y/alt-text': ['warn', { elements: ['img'], img: ['Image'] }],
      'jsx-a11y/anchor-has-content': 'warn',
      'jsx-a11y/anchor-is-valid': 'warn',
      'jsx-a11y/aria-props': 'error',
      'jsx-a11y/aria-proptypes': 'error',
      'jsx-a11y/aria-role': 'error',
      'jsx-a11y/aria-unsupported-elements': 'error',
      'jsx-a11y/autocomplete-valid': 'error',
      'jsx-a11y/control-has-associated-label': ['warn', { ignoreElements: ['input'] }],
      'jsx-a11y/heading-has-content': 'warn',
      'jsx-a11y/html-has-lang': 'warn',
      'jsx-a11y/iframe-has-title': 'warn',
      'jsx-a11y/interactive-supports-focus': 'warn',
      'jsx-a11y/label-has-associated-control': 'warn',
      'jsx-a11y/no-interactive-element-to-noninteractive-role': 'warn',
      'jsx-a11y/no-noninteractive-element-interactions': 'error',
      'jsx-a11y/no-noninteractive-element-to-interactive-role': 'error',
      'jsx-a11y/no-redundant-roles': 'warn',
      'jsx-a11y/no-static-element-interactions': 'error',
      'jsx-a11y/role-has-required-aria-props': 'error',
      'jsx-a11y/role-supports-aria-props': 'error',
      'jsx-a11y/tabindex-no-positive': 'warn',
      'jsx-a11y/aria-activedescendant-has-tabindex': 'warn',
      'jsx-a11y/img-redundant-alt': 'warn',
      'jsx-a11y/lang': 'warn',
      'jsx-a11y/media-has-caption': 'warn',
      'jsx-a11y/no-aria-hidden-on-focusable': 'warn',
      'jsx-a11y/no-noninteractive-tabindex': 'warn',
      'jsx-a11y/prefer-tag-over-role': 'warn',
    },
  },
];
