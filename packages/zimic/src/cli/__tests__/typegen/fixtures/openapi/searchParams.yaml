openapi: 3.1.0

info:
  title: Headers
  version: 1.0.0

paths:
  /users-with-literal-component-search-params:
    get:
      summary: List of users with literal component search params
      parameters:
        - $ref: '#/components/parameters/literalSearch'
        - $ref: '#/components/parameters/literalOrder'
        - $ref: '#/components/parameters/literalLimit'
        - $ref: '#/components/parameters/literalArchived'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users-with-reference-component-search-params:
    get:
      summary: List of users with reference component search params
      parameters:
        - $ref: '#/components/parameters/referenceSearch'
        - $ref: '#/components/parameters/referenceOrder'
        - $ref: '#/components/parameters/referenceLimit'
        - $ref: '#/components/parameters/referenceArchived'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users-with-reference-search-params:
    get:
      summary: List of users with reference search params
      parameters:
        - name: search
          in: query
          description: The search text
          required: false
          schema:
            $ref: '#/components/schemas/search'
        - name: order
          in: query
          description: The sort order
          required: false
          schema:
            $ref: '#/components/schemas/order'
        - name: limit
          in: query
          description: How many items to return
          required: true
          schema:
            $ref: '#/components/schemas/limit'
        - name: archived
          in: query
          description: Whether to include archived pets
          required: false
          schema:
            $ref: '#/components/schemas/archived'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users-with-literal-search-params:
    get:
      summary: List of users with literal search params
      parameters:
        - name: search
          in: query
          description: The search text
          required: false
          schema:
            type: string
            nullable: true
        - name: order
          in: query
          description: The sort order
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: limit
          in: query
          description: How many items to return
          required: true
          schema:
            type: integer
            format: int32
            maximum: 100
        - name: archived
          in: query
          description: Whether to include archived pets
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    search:
      type: string
      description: The search text
      nullable: true
    order:
      type: string
      description: The sort order
      enum:
        - asc
        - desc
    limit:
      type: integer
      format: int32
      description: How many items to return
      maximum: 100
    archived:
      type: boolean
      description: Whether to include archived pets
      default: false

  parameters:
    literalSearch:
      name: search
      in: query
      description: The search text
      required: false
      schema:
        type: string
        nullable: true
    literalOrder:
      name: order
      in: query
      description: The sort order
      required: false
      schema:
        $ref: '#/components/schemas/order'
    literalLimit:
      name: limit
      in: query
      description: How many items to return
      required: true
      schema:
        type: integer
        format: int32
        maximum: 100
    literalArchived:
      name: archived
      in: query
      description: Whether to include archived pets
      required: false
      schema:
        type: boolean
        default: false

    referenceSearch:
      name: search
      in: query
      description: The search text
      required: false
      schema:
        $ref: '#/components/schemas/search'
    referenceOrder:
      name: order
      in: query
      description: The sort order
      required: false
      schema:
        $ref: '#/components/schemas/order'
    referenceLimit:
      name: limit
      in: query
      description: How many items to return
      required: true
      schema:
        $ref: '#/components/schemas/limit'
    referenceArchived:
      name: archived
      in: query
      description: Whether to include archived pets
      required: false
      schema:
        $ref: '#/components/schemas/archived'
