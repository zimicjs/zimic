openapi: 3.1.0

info:
  version: 1.0.0
  title: Components

paths:
  /pets:
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Empty response
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    PetTag:
      type: string
      enum:
        - bird
        - cat
        - dog
        - fish

    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: object
          nullable: true
          properties:
            code:
              $ref: '#/components/schemas/PetTag'

    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'

    PetsWithCount:
      type: object
      properties:
        pets:
          type: array
          items:
            $ref: '#/components/schemas/Pet'
        numberOfPets:
          type: integer
          format: int32

    PetsWithDogCount:
      type: object
      properties:
        dogs:
          type: array
          items:
            $ref: '#/components/schemas/Pet'
        numberOfDogs:
          type: integer
          format: int32

    PetsWithAnyCount:
      anyOf:
        - $ref: '#/components/schemas/PetsWithCount'
        - $ref: '#/components/schemas/PetsWithDogCount'

    PatsWithAllCounts:
      allOf:
        - $ref: '#/components/schemas/PetsWithCount'
        - $ref: '#/components/schemas/PetsWithDogCount'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
