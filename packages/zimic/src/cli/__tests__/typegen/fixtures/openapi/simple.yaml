openapi: 3.1.0

info:
  title: Simple Schema
  version: 1.0.0
  license:
    name: MIT

servers:
  - url: http://localhost:3000
    description: Local

tags:
  - name: users

security:
  - bearerAuth: []

paths:
  /users:
    post:
      summary: Create user
      operationId: createUser
      tags:
        - users

      requestBody:
        description: The user to create
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John
                email:
                  type: string
                  example: john@email.com
                password:
                  type: string
                  example: '123456'
              required:
                - email
                - password

      responses:
        200:
          description: The user was created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: be8253f9-124b-4c32-b046-c25b6fd0af0c
                  name:
                    type: string
                    example: John
                  email:
                    type: string
                    example: john@email.com
                  createdAt:
                    type: string
                    example: '2024-01-01T00:00:00.000Z'
                  updatedAt:
                    type: string
                    example: '2024-01-01T00:00:00.000Z'
                required:
                  - id
                  - email
                  - createdAt
                  - updatedAt
            examples:
              default:
                value:
                  id: be8253f9-124b-4c32-b046-c25b6fd0af0c
                  name: John
                  email: john@email.com
                  createdAt: '2024-01-01T00:00:00.000Z'
                  updatedAt: '2024-01-01T00:00:00.000Z'
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
              examples:
                default:
                  value:
                    message: Email is already in use

    get:
      summary: List users
      operationId: listUsers
      tags:
        - users

      parameters:
        - name: limit
          in: query
          description: How many items to return
          required: true
          schema:
            type: integer
            format: int32
            maximum: 100

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: be8253f9-124b-4c32-b046-c25b6fd0af0c
                    name:
                      type: string
                      example: John
                    email:
                      type: string
                      example: john@email.com
                    createdAt:
                      type: string
                      example: '2024-01-01T00:00:00.000Z'
                    updatedAt:
                      type: string
                      example: '2024-01-01T00:00:00.000Z'
                  required:
                    - id
                    - email
                    - createdAt
                    - updatedAt
            examples:
              default:
                value:
                  - id: be8253f9-124b-4c32-b046-c25b6fd0af0c
                    name: John
                    email: john@email.com
                    createdAt: '2024-01-01T00:00:00.000Z'
                    updatedAt: '2024-01-01T00:00:00.000Z'
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
              examples:
                default:
                  value:
                    message: Invalid limit

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: The authorization token
