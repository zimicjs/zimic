// Auto-generated by zimic@0.7.1.
// Note! Changes to this file will be overwritten.

import type { HttpHeadersSerialized, HttpSchema, HttpSearchParamsSerialized } from '@/index';

export type MyServiceSchema = HttpSchema.Paths<{
  '/users': {
    GET: MyServiceOperations['users/list'];
    POST: MyServiceOperations['users/create'];
  };
}>;

export interface MyServiceComponents {
  schemas: {
    User: {
      id: string;
      name?: string;
      email: string;
      createdAt: string;
      updatedAt: string;
    };
  };
}

export interface MyServiceOperations {
  'users/list': HttpSchema.Method<{
    request: {
      searchParams: HttpSearchParamsSerialized<{
        limit: number;
        utm_source?: string;
      }>;
      headers: HttpHeadersSerialized<{
        authorization: string;
      }>;
    };
    response: {
      200: {
        body: MyServiceComponents['schemas']['User'][];
      };
      400: {
        body: {
          message: string;
        };
      };
    };
  }>;
  'users/create': HttpSchema.Method<{
    request: {
      searchParams: HttpSearchParamsSerialized<{
        utm_source?: string;
      }>;
      headers: HttpHeadersSerialized<{
        authorization: string;
      }>;
      body: {
        name?: string;
        email: string;
        password: string;
      };
    };
    response: {
      200: {
        body: MyServiceComponents['schemas']['User'];
      };
      400: {
        body: {
          message: string;
        };
      };
    };
  }>;
}
