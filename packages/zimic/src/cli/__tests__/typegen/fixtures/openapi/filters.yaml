openapi: 3.1.0

info:
  title: Dynamic Paths
  version: 1.0.0

paths:
  users:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    get:
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'

  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string

    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: Success

    patch:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '204':
          description: Success

  /users/{userId}/friends/:
    get:
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'

  /notifications:
    get:
      operationId: getNotifications
      parameters:
        - $ref: '#/components/parameters/from'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'

    delete:
      operationId: deleteNotifications
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/components/responses/error'

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'

    Notification:
      type: object
      required:
        - id
        - message
      properties:
        id:
          type: integer
          format: int64
        message:
          type: string

    Notifications:
      type: array
      items:
        $ref: '#/components/schemas/Notification'

  parameters:
    from:
      name: from
      in: query
      required: false
      schema:
        type: string
        format: date-time

  responses:
    error:
      description: Error
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
