name: Bump Zimic Version
description: Bump Zimic Version

inputs:
  project-name:
    description: Project name
    required: true
  project-directory:
    description: Project directory
    required: true
  upgrade-type:
    description: Upgrade type
    required: true
  pre-release-id:
    description: Pre-release id
    required: false
  commit-user-name:
    description: Commit user name
    required: true
  commit-user-email:
    description: Commit user email
    required: true

outputs:
  value:
    description: Bumped version
    value: ${{ steps.bump-version.outputs.value }}

runs:
  using: composite
  steps:
    - name: Bump version
      id: bump-version
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        projectName=${{ inputs.project-name }}
        upgradeType=${{ inputs.upgrade-type }}
        preReleaseId=${{ inputs.pre-release-id }}

        echo 'Bumping version...'

        currentVersion=$(pnpm version --json | jq ".$projectName" -r)
        stableCurrentVersion=$(echo "$currentVersion" | sed 's/-.*//')

        bumpedVersion=$(
          if [[ "$upgradeType" == 'stable' ]]; then
            pnpm version "$stableCurrentVersion" --no-git-tag-version
          elif [[ "$preReleaseId" == 'none' ]]; then
            pnpm version "$upgradeType" --no-git-tag-version
          else
            pnpm version "pre${upgradeType#*pre}" --preid "$preReleaseId" --no-git-tag-version
          fi
        )

        bumpedVersion=${bumpedVersion#*v}

        if [[ '${{ inputs.project-directory }}' == 'packages/zimic' ]]; then
          # also update the root package.json
          cat <<< $(jq ".version = \"$bumpedVersion\"" ../../package.json) > ../../package.json
        fi

        echo "Project '$projectName' is now at $bumpedVersion"
        echo "value=$bumpedVersion" >> $GITHUB_OUTPUT

        echo 'Committing changes...'

        git config user.name '${{ inputs.commit-user-name }}'
        git config user.email '${{ inputs.commit-user-email }}'

        git add .
        git commit -m "chore(release): $projectName@$bumpedVersion"

        echo 'Pushing changes...'

        git push -u origin HEAD --no-verify
