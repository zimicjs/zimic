name: Get Zimic Version
description: Get Zimic Version

inputs:
  project-directory:
    description: Project directory
    required: true
  validate-ref-name:
    description: The ref name to validate against the package version
    required: false

outputs:
  value:
    description: The version of the zimic package
    value: ${{ steps.version.outputs.value }}
  label:
    description: The label of the zimic package version
    value: ${{ steps.label.outputs.value }}

runs:
  using: composite
  steps:
    - name: Get version
      id: version
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        version=$(jq -r '.version' ./package.json)
        echo "value=$version" >> $GITHUB_OUTPUT

    - name: Validate version
      shell: bash
      if: ${{ inputs.validate-ref-name != '' }}
      working-directory: ${{ inputs.project-directory }}
      run: |
        if [[ '${{ inputs.validate-ref-name }}' != 'v${{ steps.version.outputs.value }}' ]]; then
          echo "The ref name '${{ inputs.validate-ref-name }}' does not match the package version 'v${{ steps.version.outputs.value }}'." >&2
          exit 1
        fi

    - name: Get version label
      id: label
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        # Check if the ref name is a valid semantic version.
        if echo '${{ steps.version.outputs.value }}' | grep -qP '^[0-9]+\.[0-9]+\.[0-9]+(-[a-z0-9-]+\.[0-9]+)?$'; then
          # Extract the label of the ref name or use 'latest' as the default.
          value=$(echo '${{ steps.version.outputs.value }}' | grep -oP '(?<=-)[a-z0-9-]+(?=\.[0-9]+$)' || echo latest)
          echo "value=$value" >> $GITHUB_OUTPUT
        else
          echo "The version '${{ steps.version.outputs.value }}' is not valid." >&2
          exit 1
        fi
