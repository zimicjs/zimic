name: Zimic Release Documentation
description: Zimic Release Documentation

inputs:
  ref-name:
    description: The Git reference name to release
    required: true
  project-name:
    description: The project name to release
    required: true
  project-directory:
    description: The project directory to release
    required: true
  wiki-ssh-key:
    description: The SSH key to push to the wiki repository
    required: true
  commit-user-name:
    description: Commit user name
    required: true
  commit-user-email:
    description: Commit user email
    required: true

runs:
  using: composite
  steps:
    - name: Get Zimic release version
      id: zimic-version
      uses: ./zimic/.github/actions/zimic-version
      with:
        project-directory: zimic/${{ inputs.project-directory }}
        validate-ref-name: ${{ inputs.ref_name }}

    - name: Checkout wiki
      uses: actions/checkout@v4
      if: ${{ steps.zimic-version.outputs.label == 'latest' }}
      with:
        repository: zimicjs/zimic.wiki
        path: zimic.wiki
        ssh-key: ${{ inputs.wiki-ssh-key }}

    - name: Sync wiki content
      if: ${{ steps.zimic-version.outputs.label == 'latest' }}
      working-directory: zimic
      shell: bash
      run: |
        bash scripts/docs/sync-wiki.sh '${{ inputs.ref_name }}'

    - name: Commit and push wiki changes
      if: ${{ steps.zimic-version.outputs.label == 'latest' }}
      working-directory: zimic.wiki
      shell: bash
      run: |
        git config user.name '${{ inputs.commit-user-name }}'
        git config user.email '${{ inputs.commit-user-email }}'

        echo 'Committing changes...'

        git add --all
        git commit -m 'docs(wiki): ${{ inputs.project-name }}@${{ steps.zimic-version.outputs.value }}'
          
        echo 'Pushing changes...'

        numberOfPushRetries=0
        maxNumberOfPushRetries=5

        until git push -u origin HEAD --no-verify; do
          if [[ $numberOfPushRetries -gt $maxNumberOfPushRetries ]]; then
            echo "Push failed after $maxNumberOfPushRetries retries. Aborting."
            exit 1
          fi

          numberOfPushRetries=$((numberOfPushRetries + 1))

          echo 'Push rejected. Retrying...'
          git pull
        done
